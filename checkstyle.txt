Starting audit...
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:41:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'takeDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'takeDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:41:28: Parameter damage should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:45:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getCardType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getCardType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:50:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setCardType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setCardType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:50:29: Parameter cardType should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:54:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:58:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:58:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:62:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:66:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:66:27: Parameter health should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:70:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:74:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:74:32: Parameter description should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:78:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:82:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:82:27: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:86:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:90:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:90:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:94:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'isUsedAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'isUsedAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:99:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setUsedAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setUsedAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\Card.java:99:32: Parameter usedAbility should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\CardHelper.java:7:21: Using the '.*' form of import should be avoided - cards.minions.*. [AvoidStarImport]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\HeroCard.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:45:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'freeze' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'freeze' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:49:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'unfreeze' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'unfreeze' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:57:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:61:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:61:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:65:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:70:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:70:29: Parameter attacked should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:74:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getIsTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getIsTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:79:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getMinionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getMinionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:84:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'getRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'getRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:88:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:93:5: Class 'MinionCard' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinionCard' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\MinionCard.java:93:27: Parameter frozen should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\cards\minions\Disciple.java:10:21: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:23:30: Parameter actionsInput should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:26:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:34: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:89: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:94:21: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:98:21: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:102:21: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:106:21: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:130:17: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:179:21: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:183:21: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:196:17: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:207:17: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:218:17: '(' should be on the previous line. [MethodParamPad]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Actions.java:222: Line has trailing spaces. [RegexpSingleline]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Game.java:44:55: '3' is a magic number. [MagicNumber]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Game.java:67:56: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Game.java:76:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Game.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Game.java:138:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Game.java:146:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\GameBoard.java:114:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\GameBoard.java:115: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\OutputConstructor.java:9:8: Unused import - enums.Constants. [UnusedImports]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\OutputConstructor.java:117:52: Parameter outputTable should be final. [FinalParameters]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\OutputConstructor.java:137: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\OutputConstructor.java:172:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Parser.java:9:18: Variable 'objectMapper' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Parser.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Robi\fac\anul2\tema1poo\.\src\game\Player.java:6:8: Unused import - cards.MinionCard. [UnusedImports]
Audit done.
Checkstyle ends with 75 errors.
